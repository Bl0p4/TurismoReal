@model TurismoRealWeb.BLL.Usuario
@{
    ViewBag.Title = "Login";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="description" content="" />
    <meta name="author" content="" />
    <title>Login - Turismo Real</title>
    @Styles.Render("~/Content/css")
    <script src="https://use.fontawesome.com/releases/v6.1.0/js/all.js" crossorigin="anonymous"></script>
</head>
<body class="bg-gradient">
    <div id="layoutAuthentication">
        <div id="layoutAuthentication_content">
            <main>
                <div class="container">
                    <div class="row justify-content-center">
                        <div class="col-lg-5">
                            <div class="card shadow-lg border-0 rounded-lg mt-5">
                                <div class="card-header"><h3 class="text-center font-weight-light my-4">TURISMO REAL</h3><h3 class="text-center font-weight-light my-4">Bienvenido</h3></div>
                                <div class="card-body">                                    
                                    <form action="" method="post" class="form form-login">
                                        <div class="form-floating mb-3">
                                            @Html.TextBoxFor(u => u.Username, new { @placeholder = "Usuario", @class = "form-control" })
                                            @Html.ValidationMessageFor(u => u.Username, "", new { @class = "text-danger" })
                                            <label for="Username">Usuario</label>
                                        </div>
                                        <div class="form-floating mb-3">
                                            @Html.PasswordFor(u => u.Password, new { @placeholder = "Contraseña", @class = "form-control" })
                                            @Html.ValidationMessageFor(u => u.Password, "", new { @class = "text-danger" })
                                            <label for="Password">Contraseña</label>
                                        </div>
                                        <div class="mt-4 mb-0">
                                            <div class="text-danger">@TempData["mensaje"]</div>
                                            <div class="d-grid"><input type="submit" value="Ingresar" class="btn btn-primary d-grid btn-block" /></div>
                                        </div>
                                    </form>
                                </div>
                                <div class="card-footer text-center py-3">
                                    <div class="small"><a href="@Url.Action("Registro","Auth")">No tienes cuenta? Registrate!</a></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </main>
        </div>
        <div id="layoutAuthentication_footer">
            <footer class="py-4 bg-light mt-auto">
                <div class="container-fluid px-4">
                    <div class="d-flex align-items-center justify-content-between small">
                        <div class="text-muted">Copyright &copy; Your Website 2022</div>
                        <div>
                            <a href="#">Privacy Policy</a>
                            &middot;
                            <a href="#">Terms &amp; Conditions</a>
                        </div>
                    </div>
                </div>
            </footer>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" crossorigin="anonymous"></script>
    <script src="js/scripts.js"></script>
</body>
</html>

<script src="https://use.typekit.net/rjb4unc.js"></script>
<script>try { Typekit.load({ async: true }); } catch (e) { }</script>






























@*@using (Html.BeginForm())
    {
        <div class="bs-example" style="border:2px solid gray;">

            <div class="form-group centerlook">
                <h1> Login </h1>
            </div>

            <div class="form-group centerlook">
                <label>   Usuario:   </label>
                @Html.TextBoxFor(u => u.Username, new { type = "username" })
            </div>
            <div class="form-group centerlook">
                <label> Contraseña: </label>
                @Html.PasswordFor(u => u.Password)

            </div>
            <div class="loginbtn">

                <input type="submit" value="Ingresar" class="btn btn-primary" />

            </div>
        </div>
    }
    <br />



    <div class="container1 cuerpo">
        <div class="logo">Turismo Real</div>
        <div class="login-item">
            <form action="" method="post" class="form form-login">
                <div class="form-field">
                    <label class="user"><span class="hidden"></span></label>
                    @Html.TextBoxFor(u => u.Username, new { type = "username" }, new { placeholder = "Usuario" })
                    <input id="login-username" type="text" class="form-input" placeholder="Usuario" required>
                </div>

                <div class="form-field">
                    <label class="lock"><span class="hidden"></span></label>
                    @Html.PasswordFor(u => u.Password, new { placeholder = "Contraseña" })
                    <input id="login-password" type="password" class="form-input" placeholder="Contraseña" required>
                </div>

                <div class="form-field">
                    <input type="submit" value="Ingresar" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>*@